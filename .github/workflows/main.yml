name: ktlint format and commit

on:
  pull_request:
    types: [opened, synchronize]
    branches:
     - main
     - 'feature/**'

jobs:
  ktlint:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history to handle conflicts

      # Cache Gradle dependencies
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Grant execution permission to gradlew
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Run ktlint format using Gradle
      - name: Run ktlint
        run: ./gradlew ktlintFormat --parallel

      # Get last commit author details
      - name: Get last commit author
        id: get_author
        run: |
          AUTHOR_NAME=$(git log -1 --pretty=format:'%an')
          AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
          echo "author_name=$AUTHOR_NAME" >> $GITHUB_ENV
          echo "author_email=$AUTHOR_EMAIL" >> $GITHUB_ENV

      # Commit changes if any formatting changes were made
      - name: Commit changes if necessary
        run: |
          git config --local user.name "${{ env.author_name }}"
          git config --local user.email "${{ env.author_email }}"
          if [[ `git status --porcelain` ]]; then
            git add .
            git commit -m "Apply ktlint format"
            # Pull the latest changes from the remote branch to avoid conflicts
            git pull --rebase origin ${{ github.head_ref }}
            # Push the changes back to the branch that triggered the PR
            git push origin HEAD:${{ github.head_ref }}
          else
            echo "No formatting changes"
          fi
